!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var t=function(){function t(e){var n,o,r=this,i=e.data,a=e.templateSelector,c=e.handleClick,l=e.handleDelete,u=e.likeCard,s=e.unlikeCard,f=e.userId;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),o=function(){r._placeDeleteButton.closest(".place").remove()},(n="_removeCard")in this?Object.defineProperty(this,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):this[n]=o,this._name=i.name,this._link=i.link,this._likes=i.likes,this._cardId=i._id,this._owner=i.owner,this._userId=f,this._templateSelector=a,this._handleClick=c,this._handleDelete=l,this._handleLikeCard=u,this._handleUnlikeCard=s}var n,o;return n=t,(o=[{key:"_getPlaceElement",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".place").cloneNode(!0)}},{key:"_getPlaceDetails",value:function(){var e=this;this._place=this._getPlaceElement(),this._placeTitle=this._place.querySelector(".place__title"),this._placeImage=this._place.querySelector(".place__image"),this._placeLikeButton=this._place.querySelector(".place__love-button"),this._placeLikeCount=this._place.querySelector(".place__love-count"),this._placeDeleteButton=this._place.querySelector(".place__delete-button"),this._owner._id!==this._userId&&this._placeDeleteButton.classList.add("hidden"),this._likes.some((function(t){return t._id===e._userId}))&&this._placeLikeButton.classList.add("place__love-button_active"),this._placeLikeCount.textContent=this._likes.length,this._placeTitle.textContent=this._name,this._placeImage.src=this._link,this._placeImage.alt="".concat(this._name," picture")}},{key:"_likeCard",value:function(){var e=this;this._placeLikeButton.classList.contains("place__love-button_active")?(this._handleUnlikeCard(this._cardId).then((function(t){e._placeLikeCount.textContent=t.likes.length})).catch((function(e){console.log(e)})),this._placeLikeButton.classList.remove("place__love-button_active")):(this._handleLikeCard(this._cardId).then((function(t){e._placeLikeCount.textContent=t.likes.length})).catch((function(e){console.log(e)})),this._placeLikeButton.classList.add("place__love-button_active"))}},{key:"_setEventListeners",value:function(){var e=this;this._placeLikeButton.addEventListener("click",(function(){e._likeCard()})),this._placeDeleteButton.addEventListener("click",(function(){e._handleDelete(e._cardId,e._removeCard)})),this._placeImage.addEventListener("click",(function(){e._handleClick()}))}},{key:"generateCard",value:function(){return this._getPlaceDetails(),this._setEventListeners(),this._place}}])&&e(n.prototype,o),t}();function n(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var o=function(){function e(t,n){var o=t.formSelector,r=t.fieldSelector,i=t.submitButtonSelector,a=t.inactiveButtonClass,c=t.fieldErrorClass,l=t.errorClass;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formSelector=o,this._fieldSelector=r,this._submitButtonSelector=i,this._inactiveButtonClass=a,this._fieldErrorClass=c,this._errorClass=l,this._formElement=n}var t,o;return t=e,(o=[{key:"_showFieldError",value:function(e,t){var n=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._fieldErrorClass),n.textContent=t,n.classList.add(this._errorClass)}},{key:"_hideFieldError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._fieldErrorClass),t.classList.remove(this._errorClass),t.textContent=""}},{key:"_checkFieldValidity",value:function(e){e.validity.valid?this._hideFieldError(e):this._showFieldError(e,e.validationMessage)}},{key:"_hasInvalidField",value:function(){return this._fieldList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidField()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.removeAttribute("disabled"))}},{key:"_setEventListeners",value:function(){var e=this;this._fieldList=Array.from(this._formElement.querySelectorAll(this._fieldSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._toggleButtonState(),this._fieldList.forEach((function(t){t.addEventListener("input",(function(){e._checkFieldValidity(t),e._toggleButtonState()}))})),this._formElement.addEventListener("reset",(function(){e._fieldList.forEach((function(t){t.value="",e._hideFieldError(t)})),e._toggleButtonState()}))}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&n(t.prototype,o),e}();function r(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var a=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),i(this,"_handleEscClose",(function(e){"Escape"===e.key&&n.close()})),i(this,"_handleClickOutsidePopup",(function(e){e.target.classList.contains("popup_opened")&&n.close()})),this._popupElement=document.querySelector(t)}var t,n;return t=e,(n=[{key:"_addEventToDocument",value:function(){document.addEventListener("keydown",this._handleEscClose)}},{key:"_removeEventFromDocument",value:function(){document.removeEventListener("keydown",this._handleEscClose)}},{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),this._addEventToDocument()}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),this._removeEventFromDocument()}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("click",this._handleClickOutsidePopup),this._popupElement.querySelector(".popup__close-button").addEventListener("click",(function(){return e.close()}))}}])&&r(t.prototype,n),e}();function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function l(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function u(e,t,n){return u="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=h(e)););return e}(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(n):r.value}},u(e,t,n||e)}function s(e,t){return s=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},s(e,t)}function f(e,t){if(t&&("object"===c(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return p(e)}function p(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function h(e){return h=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},h(e)}function _(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var d=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&s(e,t)}(a,e);var t,n,o,r,i=(o=a,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=h(o);if(r){var n=h(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return f(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),_(p(n=i.call(this,t)),"_onUpload",(function(){n.submitButton=n._popupForm.querySelector(".popup__submit-button"),n.submitButton.textContent="Saving..."})),_(p(n),"_afterUpload",(function(){n.submitButton.textContent="Save"})),_(p(n),"_handleSubmitEvent",(function(e){e.preventDefault(),n._getInputValues(),n._callback(n._formValues,n._onUpload,n._afterUpload),n.close()})),n._callback=e,n._popupForm=n._popupElement.querySelector(".popup__form"),n}return t=a,(n=[{key:"close",value:function(){u(h(a.prototype),"close",this).call(this),this._popupForm.reset()}},{key:"_getInputValues",value:function(){var e=this;this._formValues={},this._popupForm.querySelectorAll(".popup__field").forEach((function(t){return e._formValues[t.name]=t.value}))}},{key:"setEventListeners",value:function(){u(h(a.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",this._handleSubmitEvent)}}])&&l(t.prototype,n),a}(a);function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function v(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function y(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function b(e,t,n){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=g(e)););return e}(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(n):r.value}},b(e,t,n||e)}function k(e,t){return k=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},k(e,t)}function E(e,t){if(t&&("object"===m(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function g(e){return g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},g(e)}var S=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&k(e,t)}(a,e);var t,n,o,r,i=(o=a,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=g(o);if(r){var n=g(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return E(this,e)});function a(){return v(this,a),i.apply(this,arguments)}return t=a,(n=[{key:"open",value:function(e){var t=e.name,n=e.link,o=this._popupElement.querySelector(".popup__image"),r=this._popupElement.querySelector(".popup__image-location");o.src=n,o.alt="".concat(t," picture"),r.textContent=t,b(g(a.prototype),"open",this).call(this)}}])&&y(t.prototype,n),a}(a);function C(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var w=function(){function e(t,n){var o=t.items,r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=o,this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.append(e)}},{key:"renderItems",value:function(){var e=this;this._renderedItems.forEach((function(t){e._renderer(t)}))}}])&&C(t.prototype,n),e}();function L(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var j=function(){function e(t){var n=t.nameSelector,o=t.jobSelector,r=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameElement=document.querySelector(n),this._jobElement=document.querySelector(o),this._avatarElement=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}},{key:"setUserInfo",value:function(e){var t=e.profileName,n=e.profileJob,o=e.profileAvatar;this._nameElement.textContent=t,this._jobElement.textContent=n,this._avatarElement.style.backgroundImage="url(".concat(o,")")}}])&&L(t.prototype,n),e}();function P(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var O=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t.baseUrl,this._headers=t.headers}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"updateUserInfo",value:function(e){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.profileName,about:e.profileJob})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"updateUserAvatar",value:function(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.profilePictureURL})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"uploadPlace",value:function(e){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"likeCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"unlikeCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}}])&&P(t.prototype,n),e}(),I=document.querySelector(".popup__field_el_title"),q=document.querySelector(".popup__field_el_subtitle"),B=document.querySelector(".profile__add-button"),U=(document.querySelector(".popup__field_el_place-title"),document.querySelector(".popup__field_el_place-image-url"),document.querySelector(".popup__image"),document.querySelector(".popup__image-location"),document.querySelector(".profile__edit-button")),T=document.querySelector(".popup_type_confirm .popup__submit-button"),D=document.querySelector(".profile__overlay"),R=new j({nameSelector:".profile__title",jobSelector:".profile__subtitle",avatarSelector:".profile__avatar"}),x=new O({baseUrl:"https://around.nomoreparties.co/v1/group-11",headers:{authorization:"403bdafc-0a52-4e02-9b82-c7e8e4f7ffb1","Content-Type":"application/json"}});function F(e){var t=e.name,n=e.about,o=e.avatar;R.setUserInfo({profileName:t,profileJob:n,profileAvatar:o})}var A="";x.getUserInfo().then((function(e){console.log(e),F(e),A=e._id})).catch((function(e){console.log(e)}));var V="";x.getInitialCards().then((function(e){console.log(e),(V=new w({items:e,renderer:function(e){N(e)}},".places")).renderItems()})).catch((function(e){console.log(e)}));var N=function(e){var n=function(e){return new t({data:e,templateSelector:"#place-template",handleClick:function(){J.open(e)},handleDelete:function(e,t){G.open(),T.addEventListener("click",(function(n){n.preventDefault(),x.deleteCard(e).then((function(){t()})).catch((function(e){console.log(e)})),G.close()}))},likeCard:function(e){return x.likeCard(e)},unlikeCard:function(e){return x.unlikeCard(e)},userId:A}).generateCard()}(e);V.addItem(n)},J=new S(".popup_type_image");Array.from(document.querySelectorAll(".popup__form")).forEach((function(e){new o({formSelector:".popup__form",fieldSelector:".popup__field",submitButtonSelector:".popup__submit-button",inactiveButtonClass:"popup__submit-button_disabled",fieldErrorClass:"popup__field_type_error",errorClass:"popup__field-error_active"},e).enableValidation()}));var H=new d((function(e,t,n){t(),x.uploadPlace({name:e.placeName,link:e.placeImageURL}).then((function(e){N(e)})).catch((function(e){console.log(e)})).finally((function(){n()}))}),".popup_type_add"),z=new d((function(e,t,n){t(),x.updateUserInfo(e).then((function(e){F(e)})).catch((function(e){console.log(e)})).finally((function(){n()}))}),".popup_type_edit"),M=new d((function(e,t,n){t(),x.updateUserAvatar(e).then((function(e){console.log(e),F(e)})).catch((function(e){console.log(e)})).finally((function(){n()}))}),".popup_type_change"),G=new a(".popup_type_confirm");H.setEventListeners(),z.setEventListeners(),M.setEventListeners(),J.setEventListeners(),G.setEventListeners(),U.addEventListener("click",(function(){z.open();var e=R.getUserInfo(),t=e.name,n=e.job;I.value=t,q.value=n})),B.addEventListener("click",(function(){H.open()})),D.addEventListener("click",(function(){M.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,